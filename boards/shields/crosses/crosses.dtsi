#include <dt-bindings/zmk/matrix_transform.h> 
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi> 
#include "crosses-layouts.dtsi"

&physical_layout0 {
  transform = <&default_transform>;
};

/ {
  chosen {
    zmk,kscan = &kscan0;
    zmk,physical-layout = "physical_layout0";
  };

  default_transform: keymap_transform0 {
    compatible = "zmk,matrix-transform";
    columns = <10>;
    rows = <4>;
    map = <
      RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)              RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
      RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)              RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
      RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)              RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
                      RC(3,2) RC(3,3) RC(3,4)              RC(3,5) RC(3,6) RC(3,7)
    >;
  };

  kscan0: kscan0 {
    compatible = "zmk,kscan-gpio-matrix";
    diode-direction = "col2row";
    wakeup-source;

    row-gpios
      = <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      , <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      , <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      ;
  };
   
  //left hand trackball
  split_inputs {
    #address-cells = <1>;
    #size-cells = <0>;

    trackball_peripheral_split: trackball_peripheral_split@0 {
      compatible = "zmk,input-split";
      reg = <0>;
    };
  };

  trackball_peripheral_listener: trackball_peripheral_listener {
    compatible = "zmk,input-listener";
    status = "disabled";
    device = <&trackball_peripheral_split>;
    input-processors
      = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_XY_SWAP)>
      ;
  };

  //right hand trackball
  trackball_central_listener: trackball_central_listener {
    compatible = "zmk,input-listener";
    status = "disabled";
    input-processors
      = <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP)>
      , <&zip_xy_scaler 1 10>
      , <&zip_xy_to_scroll_mapper>
      ;
  };
};

